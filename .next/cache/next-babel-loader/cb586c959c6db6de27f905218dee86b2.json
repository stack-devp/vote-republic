{"ast":null,"code":"const db = require('../../lib/db');\n\nconst escape = require('sql-template-strings');\n\nmodule.exports = async (req, res) => {\n  let page = parseInt(req.query.page) || 1;\n  const limit = parseInt(req.query.limit) || 9;\n  if (page < 1) page = 1;\n  const profiles = await db.query(escape`\n      SELECT *\n      FROM profiles\n      ORDER BY id\n      LIMIT ${(page - 1) * limit}, ${limit}\n    `);\n  const count = await db.query(escape`\n      SELECT COUNT(*)\n      AS profilesCount\n      FROM profiles\n    `);\n  const {\n    profilesCount\n  } = count[0];\n  const pageCount = Math.ceil(profilesCount / limit);\n  res.status(200).json({\n    profiles,\n    pageCount,\n    page\n  });\n};","map":{"version":3,"sources":["/Users/stack/prod/voterepublic/vote-republic/pages/api/list.js"],"names":["db","require","escape","module","exports","req","res","page","parseInt","query","limit","profiles","count","profilesCount","pageCount","Math","ceil","status","json"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,sBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAIC,IAAI,GAAGC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAUF,IAAX,CAAR,IAA4B,CAAvC;AACA,QAAMG,KAAK,GAAGF,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAUC,KAAX,CAAR,IAA6B,CAA3C;AACA,MAAIH,IAAI,GAAG,CAAX,EAAcA,IAAI,GAAG,CAAP;AACd,QAAMI,QAAQ,GAAG,MAAMX,EAAE,CAACS,KAAH,CAASP,MAAO;;;;cAI3B,CAACK,IAAI,GAAG,CAAR,IAAaG,KAAM,KAAIA,KAAM;KAJlB,CAAvB;AAMA,QAAME,KAAK,GAAG,MAAMZ,EAAE,CAACS,KAAH,CAASP,MAAO;;;;KAAhB,CAApB;AAKA,QAAM;AAAEW,IAAAA;AAAF,MAAoBD,KAAK,CAAC,CAAD,CAA/B;AACA,QAAME,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,aAAa,GAAGH,KAA1B,CAAlB;AACAJ,EAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEP,IAAAA,QAAF;AAAYG,IAAAA,SAAZ;AAAuBP,IAAAA;AAAvB,GAArB;AACD,CAlBD","sourcesContent":["const db = require('../../lib/db')\nconst escape = require('sql-template-strings')\n\nmodule.exports = async (req, res) => {\n  let page = parseInt(req.query.page) || 1\n  const limit = parseInt(req.query.limit) || 9\n  if (page < 1) page = 1\n  const profiles = await db.query(escape`\n      SELECT *\n      FROM profiles\n      ORDER BY id\n      LIMIT ${(page - 1) * limit}, ${limit}\n    `)\n  const count = await db.query(escape`\n      SELECT COUNT(*)\n      AS profilesCount\n      FROM profiles\n    `)\n  const { profilesCount } = count[0]\n  const pageCount = Math.ceil(profilesCount / limit)\n  res.status(200).json({ profiles, pageCount, page })\n}"]},"metadata":{},"sourceType":"script"}